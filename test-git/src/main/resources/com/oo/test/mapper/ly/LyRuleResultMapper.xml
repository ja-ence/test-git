<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oo.test.dao.ly.LyRuleResultMapper" >
  <resultMap id="BaseResultMap" type="com.oo.test.model.ly.LyRuleResult" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="app_code" property="appCode" jdbcType="VARCHAR" />
    <result column="before_result" property="beforeResult" jdbcType="VARCHAR" />
    <result column="after_result" property="afterResult" jdbcType="VARCHAR" />
    <result column="workflow_queue" property="workflowQueue" jdbcType="CHAR" />
    <result column="stragetyversion" property="stragetyversion" jdbcType="VARCHAR" />
    <result column="stragetyversion_date" property="stragetyversionDate" jdbcType="VARCHAR" />
    <result column="zhengxin_abnormal" property="zhengxinAbnormal" jdbcType="VARCHAR" />
    <result column="test_flag" property="testFlag" jdbcType="VARCHAR" />
    <result column="merge_rcode" property="mergeRcode" jdbcType="VARCHAR" />
    <result column="refuse_rcode" property="refuseRcode" jdbcType="VARCHAR" />
    <result column="risk_node" property="riskNode" jdbcType="VARCHAR" />
    <result column="tree_group" property="treeGroup" jdbcType="VARCHAR" />
    <result column="fund_rcode" property="fundRcode" jdbcType="VARCHAR" />
    <result column="blacklist_rcode" property="blacklistRcode" jdbcType="VARCHAR" />
    <result column="external_rcode" property="externalRcode" jdbcType="VARCHAR" />
    <result column="qianhai_rcode" property="qianhaiRcode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="score" property="score" jdbcType="VARCHAR" />
    <result column="td_blacklist_detail" property="tdBlacklistDetail" jdbcType="VARCHAR" />
    <result column="br_blacklist_detail" property="brBlacklistDetail" jdbcType="VARCHAR" />
    <result column="lw_driver_status" property="lwDriverStatus" jdbcType="VARCHAR" />
    <result column="qh_credoo_score" property="qhCredooScore" jdbcType="INTEGER" />
    <result column="xl_data_status_value" property="xlDataStatusValue" jdbcType="VARCHAR" />
    <result column="ins_rule_a_code" property="insRuleACode" jdbcType="VARCHAR" />
    <result column="ins_rule_b_code" property="insRuleBCode" jdbcType="VARCHAR" />
    <result column="risk_grade" property="riskGrade" jdbcType="VARCHAR" />
    <result column="risk_label" property="riskLabel" jdbcType="VARCHAR" />
    <result column="workflow_label" property="workflowLabel" jdbcType="VARCHAR" />
    <result column="gzt_bad_info_detail" property="gztBadInfoDetail" jdbcType="VARCHAR" />
    <result column="mt_gzt_bad_info_detail" property="mtGztBadInfoDetail" jdbcType="VARCHAR" />
    <result column="gt_gzt_bad_info_detail" property="gtGztBadInfoDetail" jdbcType="VARCHAR" />
    <result column="pre_credit" property="preCredit" jdbcType="INTEGER" />
    <result column="pre_rate" property="preRate" jdbcType="VARCHAR" />
    <result column="fraud_alert" property="fraudAlert" jdbcType="VARCHAR" />
    <result column="fraud_score" property="fraudScore" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.oo.test.model.ly.LyRuleResult" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    <result column="abnormal_item" property="abnormalItem" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    id, app_code, before_result, after_result, workflow_queue, stragetyversion, stragetyversion_date, 
    zhengxin_abnormal, test_flag, merge_rcode, refuse_rcode, risk_node, tree_group, fund_rcode, 
    blacklist_rcode, external_rcode, qianhai_rcode, create_time, score, td_blacklist_detail, 
    br_blacklist_detail, lw_driver_status, qh_credoo_score, xl_data_status_value, ins_rule_a_code, 
    ins_rule_b_code, risk_grade, risk_label, workflow_label, gzt_bad_info_detail, mt_gzt_bad_info_detail, 
    gt_gzt_bad_info_detail, pre_credit, pre_rate, fraud_alert, fraud_score
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    abnormal_item
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.oo.test.model.ly.LyRuleResultExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_ly_rule_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.oo.test.model.ly.LyRuleResultExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_ly_rule_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_ly_rule_result
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    delete from t_ly_rule_result
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.oo.test.model.ly.LyRuleResultExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    delete from t_ly_rule_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.oo.test.model.ly.LyRuleResult" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_ly_rule_result (app_code, before_result, after_result, 
      workflow_queue, stragetyversion, stragetyversion_date, 
      zhengxin_abnormal, test_flag, merge_rcode, 
      refuse_rcode, risk_node, tree_group, 
      fund_rcode, blacklist_rcode, external_rcode, 
      qianhai_rcode, create_time, score, 
      td_blacklist_detail, br_blacklist_detail, lw_driver_status, 
      qh_credoo_score, xl_data_status_value, ins_rule_a_code, 
      ins_rule_b_code, risk_grade, risk_label, 
      workflow_label, gzt_bad_info_detail, mt_gzt_bad_info_detail, 
      gt_gzt_bad_info_detail, pre_credit, pre_rate, 
      fraud_alert, fraud_score, abnormal_item
      )
    values (#{appCode,jdbcType=VARCHAR}, #{beforeResult,jdbcType=VARCHAR}, #{afterResult,jdbcType=VARCHAR}, 
      #{workflowQueue,jdbcType=CHAR}, #{stragetyversion,jdbcType=VARCHAR}, #{stragetyversionDate,jdbcType=VARCHAR}, 
      #{zhengxinAbnormal,jdbcType=VARCHAR}, #{testFlag,jdbcType=VARCHAR}, #{mergeRcode,jdbcType=VARCHAR}, 
      #{refuseRcode,jdbcType=VARCHAR}, #{riskNode,jdbcType=VARCHAR}, #{treeGroup,jdbcType=VARCHAR}, 
      #{fundRcode,jdbcType=VARCHAR}, #{blacklistRcode,jdbcType=VARCHAR}, #{externalRcode,jdbcType=VARCHAR}, 
      #{qianhaiRcode,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{score,jdbcType=VARCHAR}, 
      #{tdBlacklistDetail,jdbcType=VARCHAR}, #{brBlacklistDetail,jdbcType=VARCHAR}, #{lwDriverStatus,jdbcType=VARCHAR}, 
      #{qhCredooScore,jdbcType=INTEGER}, #{xlDataStatusValue,jdbcType=VARCHAR}, #{insRuleACode,jdbcType=VARCHAR}, 
      #{insRuleBCode,jdbcType=VARCHAR}, #{riskGrade,jdbcType=VARCHAR}, #{riskLabel,jdbcType=VARCHAR}, 
      #{workflowLabel,jdbcType=VARCHAR}, #{gztBadInfoDetail,jdbcType=VARCHAR}, #{mtGztBadInfoDetail,jdbcType=VARCHAR}, 
      #{gtGztBadInfoDetail,jdbcType=VARCHAR}, #{preCredit,jdbcType=INTEGER}, #{preRate,jdbcType=VARCHAR}, 
      #{fraudAlert,jdbcType=VARCHAR}, #{fraudScore,jdbcType=INTEGER}, #{abnormalItem,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.oo.test.model.ly.LyRuleResult" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_ly_rule_result
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="appCode != null" >
        app_code,
      </if>
      <if test="beforeResult != null" >
        before_result,
      </if>
      <if test="afterResult != null" >
        after_result,
      </if>
      <if test="workflowQueue != null" >
        workflow_queue,
      </if>
      <if test="stragetyversion != null" >
        stragetyversion,
      </if>
      <if test="stragetyversionDate != null" >
        stragetyversion_date,
      </if>
      <if test="zhengxinAbnormal != null" >
        zhengxin_abnormal,
      </if>
      <if test="testFlag != null" >
        test_flag,
      </if>
      <if test="mergeRcode != null" >
        merge_rcode,
      </if>
      <if test="refuseRcode != null" >
        refuse_rcode,
      </if>
      <if test="riskNode != null" >
        risk_node,
      </if>
      <if test="treeGroup != null" >
        tree_group,
      </if>
      <if test="fundRcode != null" >
        fund_rcode,
      </if>
      <if test="blacklistRcode != null" >
        blacklist_rcode,
      </if>
      <if test="externalRcode != null" >
        external_rcode,
      </if>
      <if test="qianhaiRcode != null" >
        qianhai_rcode,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="tdBlacklistDetail != null" >
        td_blacklist_detail,
      </if>
      <if test="brBlacklistDetail != null" >
        br_blacklist_detail,
      </if>
      <if test="lwDriverStatus != null" >
        lw_driver_status,
      </if>
      <if test="qhCredooScore != null" >
        qh_credoo_score,
      </if>
      <if test="xlDataStatusValue != null" >
        xl_data_status_value,
      </if>
      <if test="insRuleACode != null" >
        ins_rule_a_code,
      </if>
      <if test="insRuleBCode != null" >
        ins_rule_b_code,
      </if>
      <if test="riskGrade != null" >
        risk_grade,
      </if>
      <if test="riskLabel != null" >
        risk_label,
      </if>
      <if test="workflowLabel != null" >
        workflow_label,
      </if>
      <if test="gztBadInfoDetail != null" >
        gzt_bad_info_detail,
      </if>
      <if test="mtGztBadInfoDetail != null" >
        mt_gzt_bad_info_detail,
      </if>
      <if test="gtGztBadInfoDetail != null" >
        gt_gzt_bad_info_detail,
      </if>
      <if test="preCredit != null" >
        pre_credit,
      </if>
      <if test="preRate != null" >
        pre_rate,
      </if>
      <if test="fraudAlert != null" >
        fraud_alert,
      </if>
      <if test="fraudScore != null" >
        fraud_score,
      </if>
      <if test="abnormalItem != null" >
        abnormal_item,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="appCode != null" >
        #{appCode,jdbcType=VARCHAR},
      </if>
      <if test="beforeResult != null" >
        #{beforeResult,jdbcType=VARCHAR},
      </if>
      <if test="afterResult != null" >
        #{afterResult,jdbcType=VARCHAR},
      </if>
      <if test="workflowQueue != null" >
        #{workflowQueue,jdbcType=CHAR},
      </if>
      <if test="stragetyversion != null" >
        #{stragetyversion,jdbcType=VARCHAR},
      </if>
      <if test="stragetyversionDate != null" >
        #{stragetyversionDate,jdbcType=VARCHAR},
      </if>
      <if test="zhengxinAbnormal != null" >
        #{zhengxinAbnormal,jdbcType=VARCHAR},
      </if>
      <if test="testFlag != null" >
        #{testFlag,jdbcType=VARCHAR},
      </if>
      <if test="mergeRcode != null" >
        #{mergeRcode,jdbcType=VARCHAR},
      </if>
      <if test="refuseRcode != null" >
        #{refuseRcode,jdbcType=VARCHAR},
      </if>
      <if test="riskNode != null" >
        #{riskNode,jdbcType=VARCHAR},
      </if>
      <if test="treeGroup != null" >
        #{treeGroup,jdbcType=VARCHAR},
      </if>
      <if test="fundRcode != null" >
        #{fundRcode,jdbcType=VARCHAR},
      </if>
      <if test="blacklistRcode != null" >
        #{blacklistRcode,jdbcType=VARCHAR},
      </if>
      <if test="externalRcode != null" >
        #{externalRcode,jdbcType=VARCHAR},
      </if>
      <if test="qianhaiRcode != null" >
        #{qianhaiRcode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null" >
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="tdBlacklistDetail != null" >
        #{tdBlacklistDetail,jdbcType=VARCHAR},
      </if>
      <if test="brBlacklistDetail != null" >
        #{brBlacklistDetail,jdbcType=VARCHAR},
      </if>
      <if test="lwDriverStatus != null" >
        #{lwDriverStatus,jdbcType=VARCHAR},
      </if>
      <if test="qhCredooScore != null" >
        #{qhCredooScore,jdbcType=INTEGER},
      </if>
      <if test="xlDataStatusValue != null" >
        #{xlDataStatusValue,jdbcType=VARCHAR},
      </if>
      <if test="insRuleACode != null" >
        #{insRuleACode,jdbcType=VARCHAR},
      </if>
      <if test="insRuleBCode != null" >
        #{insRuleBCode,jdbcType=VARCHAR},
      </if>
      <if test="riskGrade != null" >
        #{riskGrade,jdbcType=VARCHAR},
      </if>
      <if test="riskLabel != null" >
        #{riskLabel,jdbcType=VARCHAR},
      </if>
      <if test="workflowLabel != null" >
        #{workflowLabel,jdbcType=VARCHAR},
      </if>
      <if test="gztBadInfoDetail != null" >
        #{gztBadInfoDetail,jdbcType=VARCHAR},
      </if>
      <if test="mtGztBadInfoDetail != null" >
        #{mtGztBadInfoDetail,jdbcType=VARCHAR},
      </if>
      <if test="gtGztBadInfoDetail != null" >
        #{gtGztBadInfoDetail,jdbcType=VARCHAR},
      </if>
      <if test="preCredit != null" >
        #{preCredit,jdbcType=INTEGER},
      </if>
      <if test="preRate != null" >
        #{preRate,jdbcType=VARCHAR},
      </if>
      <if test="fraudAlert != null" >
        #{fraudAlert,jdbcType=VARCHAR},
      </if>
      <if test="fraudScore != null" >
        #{fraudScore,jdbcType=INTEGER},
      </if>
      <if test="abnormalItem != null" >
        #{abnormalItem,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.oo.test.model.ly.LyRuleResultExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    select count(*) from t_ly_rule_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    update t_ly_rule_result
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appCode != null" >
        app_code = #{record.appCode,jdbcType=VARCHAR},
      </if>
      <if test="record.beforeResult != null" >
        before_result = #{record.beforeResult,jdbcType=VARCHAR},
      </if>
      <if test="record.afterResult != null" >
        after_result = #{record.afterResult,jdbcType=VARCHAR},
      </if>
      <if test="record.workflowQueue != null" >
        workflow_queue = #{record.workflowQueue,jdbcType=CHAR},
      </if>
      <if test="record.stragetyversion != null" >
        stragetyversion = #{record.stragetyversion,jdbcType=VARCHAR},
      </if>
      <if test="record.stragetyversionDate != null" >
        stragetyversion_date = #{record.stragetyversionDate,jdbcType=VARCHAR},
      </if>
      <if test="record.zhengxinAbnormal != null" >
        zhengxin_abnormal = #{record.zhengxinAbnormal,jdbcType=VARCHAR},
      </if>
      <if test="record.testFlag != null" >
        test_flag = #{record.testFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.mergeRcode != null" >
        merge_rcode = #{record.mergeRcode,jdbcType=VARCHAR},
      </if>
      <if test="record.refuseRcode != null" >
        refuse_rcode = #{record.refuseRcode,jdbcType=VARCHAR},
      </if>
      <if test="record.riskNode != null" >
        risk_node = #{record.riskNode,jdbcType=VARCHAR},
      </if>
      <if test="record.treeGroup != null" >
        tree_group = #{record.treeGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.fundRcode != null" >
        fund_rcode = #{record.fundRcode,jdbcType=VARCHAR},
      </if>
      <if test="record.blacklistRcode != null" >
        blacklist_rcode = #{record.blacklistRcode,jdbcType=VARCHAR},
      </if>
      <if test="record.externalRcode != null" >
        external_rcode = #{record.externalRcode,jdbcType=VARCHAR},
      </if>
      <if test="record.qianhaiRcode != null" >
        qianhai_rcode = #{record.qianhaiRcode,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=VARCHAR},
      </if>
      <if test="record.tdBlacklistDetail != null" >
        td_blacklist_detail = #{record.tdBlacklistDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.brBlacklistDetail != null" >
        br_blacklist_detail = #{record.brBlacklistDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.lwDriverStatus != null" >
        lw_driver_status = #{record.lwDriverStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.qhCredooScore != null" >
        qh_credoo_score = #{record.qhCredooScore,jdbcType=INTEGER},
      </if>
      <if test="record.xlDataStatusValue != null" >
        xl_data_status_value = #{record.xlDataStatusValue,jdbcType=VARCHAR},
      </if>
      <if test="record.insRuleACode != null" >
        ins_rule_a_code = #{record.insRuleACode,jdbcType=VARCHAR},
      </if>
      <if test="record.insRuleBCode != null" >
        ins_rule_b_code = #{record.insRuleBCode,jdbcType=VARCHAR},
      </if>
      <if test="record.riskGrade != null" >
        risk_grade = #{record.riskGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.riskLabel != null" >
        risk_label = #{record.riskLabel,jdbcType=VARCHAR},
      </if>
      <if test="record.workflowLabel != null" >
        workflow_label = #{record.workflowLabel,jdbcType=VARCHAR},
      </if>
      <if test="record.gztBadInfoDetail != null" >
        gzt_bad_info_detail = #{record.gztBadInfoDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.mtGztBadInfoDetail != null" >
        mt_gzt_bad_info_detail = #{record.mtGztBadInfoDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.gtGztBadInfoDetail != null" >
        gt_gzt_bad_info_detail = #{record.gtGztBadInfoDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.preCredit != null" >
        pre_credit = #{record.preCredit,jdbcType=INTEGER},
      </if>
      <if test="record.preRate != null" >
        pre_rate = #{record.preRate,jdbcType=VARCHAR},
      </if>
      <if test="record.fraudAlert != null" >
        fraud_alert = #{record.fraudAlert,jdbcType=VARCHAR},
      </if>
      <if test="record.fraudScore != null" >
        fraud_score = #{record.fraudScore,jdbcType=INTEGER},
      </if>
      <if test="record.abnormalItem != null" >
        abnormal_item = #{record.abnormalItem,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    update t_ly_rule_result
    set id = #{record.id,jdbcType=BIGINT},
      app_code = #{record.appCode,jdbcType=VARCHAR},
      before_result = #{record.beforeResult,jdbcType=VARCHAR},
      after_result = #{record.afterResult,jdbcType=VARCHAR},
      workflow_queue = #{record.workflowQueue,jdbcType=CHAR},
      stragetyversion = #{record.stragetyversion,jdbcType=VARCHAR},
      stragetyversion_date = #{record.stragetyversionDate,jdbcType=VARCHAR},
      zhengxin_abnormal = #{record.zhengxinAbnormal,jdbcType=VARCHAR},
      test_flag = #{record.testFlag,jdbcType=VARCHAR},
      merge_rcode = #{record.mergeRcode,jdbcType=VARCHAR},
      refuse_rcode = #{record.refuseRcode,jdbcType=VARCHAR},
      risk_node = #{record.riskNode,jdbcType=VARCHAR},
      tree_group = #{record.treeGroup,jdbcType=VARCHAR},
      fund_rcode = #{record.fundRcode,jdbcType=VARCHAR},
      blacklist_rcode = #{record.blacklistRcode,jdbcType=VARCHAR},
      external_rcode = #{record.externalRcode,jdbcType=VARCHAR},
      qianhai_rcode = #{record.qianhaiRcode,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      score = #{record.score,jdbcType=VARCHAR},
      td_blacklist_detail = #{record.tdBlacklistDetail,jdbcType=VARCHAR},
      br_blacklist_detail = #{record.brBlacklistDetail,jdbcType=VARCHAR},
      lw_driver_status = #{record.lwDriverStatus,jdbcType=VARCHAR},
      qh_credoo_score = #{record.qhCredooScore,jdbcType=INTEGER},
      xl_data_status_value = #{record.xlDataStatusValue,jdbcType=VARCHAR},
      ins_rule_a_code = #{record.insRuleACode,jdbcType=VARCHAR},
      ins_rule_b_code = #{record.insRuleBCode,jdbcType=VARCHAR},
      risk_grade = #{record.riskGrade,jdbcType=VARCHAR},
      risk_label = #{record.riskLabel,jdbcType=VARCHAR},
      workflow_label = #{record.workflowLabel,jdbcType=VARCHAR},
      gzt_bad_info_detail = #{record.gztBadInfoDetail,jdbcType=VARCHAR},
      mt_gzt_bad_info_detail = #{record.mtGztBadInfoDetail,jdbcType=VARCHAR},
      gt_gzt_bad_info_detail = #{record.gtGztBadInfoDetail,jdbcType=VARCHAR},
      pre_credit = #{record.preCredit,jdbcType=INTEGER},
      pre_rate = #{record.preRate,jdbcType=VARCHAR},
      fraud_alert = #{record.fraudAlert,jdbcType=VARCHAR},
      fraud_score = #{record.fraudScore,jdbcType=INTEGER},
      abnormal_item = #{record.abnormalItem,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    update t_ly_rule_result
    set id = #{record.id,jdbcType=BIGINT},
      app_code = #{record.appCode,jdbcType=VARCHAR},
      before_result = #{record.beforeResult,jdbcType=VARCHAR},
      after_result = #{record.afterResult,jdbcType=VARCHAR},
      workflow_queue = #{record.workflowQueue,jdbcType=CHAR},
      stragetyversion = #{record.stragetyversion,jdbcType=VARCHAR},
      stragetyversion_date = #{record.stragetyversionDate,jdbcType=VARCHAR},
      zhengxin_abnormal = #{record.zhengxinAbnormal,jdbcType=VARCHAR},
      test_flag = #{record.testFlag,jdbcType=VARCHAR},
      merge_rcode = #{record.mergeRcode,jdbcType=VARCHAR},
      refuse_rcode = #{record.refuseRcode,jdbcType=VARCHAR},
      risk_node = #{record.riskNode,jdbcType=VARCHAR},
      tree_group = #{record.treeGroup,jdbcType=VARCHAR},
      fund_rcode = #{record.fundRcode,jdbcType=VARCHAR},
      blacklist_rcode = #{record.blacklistRcode,jdbcType=VARCHAR},
      external_rcode = #{record.externalRcode,jdbcType=VARCHAR},
      qianhai_rcode = #{record.qianhaiRcode,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      score = #{record.score,jdbcType=VARCHAR},
      td_blacklist_detail = #{record.tdBlacklistDetail,jdbcType=VARCHAR},
      br_blacklist_detail = #{record.brBlacklistDetail,jdbcType=VARCHAR},
      lw_driver_status = #{record.lwDriverStatus,jdbcType=VARCHAR},
      qh_credoo_score = #{record.qhCredooScore,jdbcType=INTEGER},
      xl_data_status_value = #{record.xlDataStatusValue,jdbcType=VARCHAR},
      ins_rule_a_code = #{record.insRuleACode,jdbcType=VARCHAR},
      ins_rule_b_code = #{record.insRuleBCode,jdbcType=VARCHAR},
      risk_grade = #{record.riskGrade,jdbcType=VARCHAR},
      risk_label = #{record.riskLabel,jdbcType=VARCHAR},
      workflow_label = #{record.workflowLabel,jdbcType=VARCHAR},
      gzt_bad_info_detail = #{record.gztBadInfoDetail,jdbcType=VARCHAR},
      mt_gzt_bad_info_detail = #{record.mtGztBadInfoDetail,jdbcType=VARCHAR},
      gt_gzt_bad_info_detail = #{record.gtGztBadInfoDetail,jdbcType=VARCHAR},
      pre_credit = #{record.preCredit,jdbcType=INTEGER},
      pre_rate = #{record.preRate,jdbcType=VARCHAR},
      fraud_alert = #{record.fraudAlert,jdbcType=VARCHAR},
      fraud_score = #{record.fraudScore,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.oo.test.model.ly.LyRuleResult" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    update t_ly_rule_result
    <set >
      <if test="appCode != null" >
        app_code = #{appCode,jdbcType=VARCHAR},
      </if>
      <if test="beforeResult != null" >
        before_result = #{beforeResult,jdbcType=VARCHAR},
      </if>
      <if test="afterResult != null" >
        after_result = #{afterResult,jdbcType=VARCHAR},
      </if>
      <if test="workflowQueue != null" >
        workflow_queue = #{workflowQueue,jdbcType=CHAR},
      </if>
      <if test="stragetyversion != null" >
        stragetyversion = #{stragetyversion,jdbcType=VARCHAR},
      </if>
      <if test="stragetyversionDate != null" >
        stragetyversion_date = #{stragetyversionDate,jdbcType=VARCHAR},
      </if>
      <if test="zhengxinAbnormal != null" >
        zhengxin_abnormal = #{zhengxinAbnormal,jdbcType=VARCHAR},
      </if>
      <if test="testFlag != null" >
        test_flag = #{testFlag,jdbcType=VARCHAR},
      </if>
      <if test="mergeRcode != null" >
        merge_rcode = #{mergeRcode,jdbcType=VARCHAR},
      </if>
      <if test="refuseRcode != null" >
        refuse_rcode = #{refuseRcode,jdbcType=VARCHAR},
      </if>
      <if test="riskNode != null" >
        risk_node = #{riskNode,jdbcType=VARCHAR},
      </if>
      <if test="treeGroup != null" >
        tree_group = #{treeGroup,jdbcType=VARCHAR},
      </if>
      <if test="fundRcode != null" >
        fund_rcode = #{fundRcode,jdbcType=VARCHAR},
      </if>
      <if test="blacklistRcode != null" >
        blacklist_rcode = #{blacklistRcode,jdbcType=VARCHAR},
      </if>
      <if test="externalRcode != null" >
        external_rcode = #{externalRcode,jdbcType=VARCHAR},
      </if>
      <if test="qianhaiRcode != null" >
        qianhai_rcode = #{qianhaiRcode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="tdBlacklistDetail != null" >
        td_blacklist_detail = #{tdBlacklistDetail,jdbcType=VARCHAR},
      </if>
      <if test="brBlacklistDetail != null" >
        br_blacklist_detail = #{brBlacklistDetail,jdbcType=VARCHAR},
      </if>
      <if test="lwDriverStatus != null" >
        lw_driver_status = #{lwDriverStatus,jdbcType=VARCHAR},
      </if>
      <if test="qhCredooScore != null" >
        qh_credoo_score = #{qhCredooScore,jdbcType=INTEGER},
      </if>
      <if test="xlDataStatusValue != null" >
        xl_data_status_value = #{xlDataStatusValue,jdbcType=VARCHAR},
      </if>
      <if test="insRuleACode != null" >
        ins_rule_a_code = #{insRuleACode,jdbcType=VARCHAR},
      </if>
      <if test="insRuleBCode != null" >
        ins_rule_b_code = #{insRuleBCode,jdbcType=VARCHAR},
      </if>
      <if test="riskGrade != null" >
        risk_grade = #{riskGrade,jdbcType=VARCHAR},
      </if>
      <if test="riskLabel != null" >
        risk_label = #{riskLabel,jdbcType=VARCHAR},
      </if>
      <if test="workflowLabel != null" >
        workflow_label = #{workflowLabel,jdbcType=VARCHAR},
      </if>
      <if test="gztBadInfoDetail != null" >
        gzt_bad_info_detail = #{gztBadInfoDetail,jdbcType=VARCHAR},
      </if>
      <if test="mtGztBadInfoDetail != null" >
        mt_gzt_bad_info_detail = #{mtGztBadInfoDetail,jdbcType=VARCHAR},
      </if>
      <if test="gtGztBadInfoDetail != null" >
        gt_gzt_bad_info_detail = #{gtGztBadInfoDetail,jdbcType=VARCHAR},
      </if>
      <if test="preCredit != null" >
        pre_credit = #{preCredit,jdbcType=INTEGER},
      </if>
      <if test="preRate != null" >
        pre_rate = #{preRate,jdbcType=VARCHAR},
      </if>
      <if test="fraudAlert != null" >
        fraud_alert = #{fraudAlert,jdbcType=VARCHAR},
      </if>
      <if test="fraudScore != null" >
        fraud_score = #{fraudScore,jdbcType=INTEGER},
      </if>
      <if test="abnormalItem != null" >
        abnormal_item = #{abnormalItem,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.oo.test.model.ly.LyRuleResult" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    update t_ly_rule_result
    set app_code = #{appCode,jdbcType=VARCHAR},
      before_result = #{beforeResult,jdbcType=VARCHAR},
      after_result = #{afterResult,jdbcType=VARCHAR},
      workflow_queue = #{workflowQueue,jdbcType=CHAR},
      stragetyversion = #{stragetyversion,jdbcType=VARCHAR},
      stragetyversion_date = #{stragetyversionDate,jdbcType=VARCHAR},
      zhengxin_abnormal = #{zhengxinAbnormal,jdbcType=VARCHAR},
      test_flag = #{testFlag,jdbcType=VARCHAR},
      merge_rcode = #{mergeRcode,jdbcType=VARCHAR},
      refuse_rcode = #{refuseRcode,jdbcType=VARCHAR},
      risk_node = #{riskNode,jdbcType=VARCHAR},
      tree_group = #{treeGroup,jdbcType=VARCHAR},
      fund_rcode = #{fundRcode,jdbcType=VARCHAR},
      blacklist_rcode = #{blacklistRcode,jdbcType=VARCHAR},
      external_rcode = #{externalRcode,jdbcType=VARCHAR},
      qianhai_rcode = #{qianhaiRcode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      score = #{score,jdbcType=VARCHAR},
      td_blacklist_detail = #{tdBlacklistDetail,jdbcType=VARCHAR},
      br_blacklist_detail = #{brBlacklistDetail,jdbcType=VARCHAR},
      lw_driver_status = #{lwDriverStatus,jdbcType=VARCHAR},
      qh_credoo_score = #{qhCredooScore,jdbcType=INTEGER},
      xl_data_status_value = #{xlDataStatusValue,jdbcType=VARCHAR},
      ins_rule_a_code = #{insRuleACode,jdbcType=VARCHAR},
      ins_rule_b_code = #{insRuleBCode,jdbcType=VARCHAR},
      risk_grade = #{riskGrade,jdbcType=VARCHAR},
      risk_label = #{riskLabel,jdbcType=VARCHAR},
      workflow_label = #{workflowLabel,jdbcType=VARCHAR},
      gzt_bad_info_detail = #{gztBadInfoDetail,jdbcType=VARCHAR},
      mt_gzt_bad_info_detail = #{mtGztBadInfoDetail,jdbcType=VARCHAR},
      gt_gzt_bad_info_detail = #{gtGztBadInfoDetail,jdbcType=VARCHAR},
      pre_credit = #{preCredit,jdbcType=INTEGER},
      pre_rate = #{preRate,jdbcType=VARCHAR},
      fraud_alert = #{fraudAlert,jdbcType=VARCHAR},
      fraud_score = #{fraudScore,jdbcType=INTEGER},
      abnormal_item = #{abnormalItem,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oo.test.model.ly.LyRuleResult" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jun 12 16:25:49 CST 2017.
    -->
    update t_ly_rule_result
    set app_code = #{appCode,jdbcType=VARCHAR},
      before_result = #{beforeResult,jdbcType=VARCHAR},
      after_result = #{afterResult,jdbcType=VARCHAR},
      workflow_queue = #{workflowQueue,jdbcType=CHAR},
      stragetyversion = #{stragetyversion,jdbcType=VARCHAR},
      stragetyversion_date = #{stragetyversionDate,jdbcType=VARCHAR},
      zhengxin_abnormal = #{zhengxinAbnormal,jdbcType=VARCHAR},
      test_flag = #{testFlag,jdbcType=VARCHAR},
      merge_rcode = #{mergeRcode,jdbcType=VARCHAR},
      refuse_rcode = #{refuseRcode,jdbcType=VARCHAR},
      risk_node = #{riskNode,jdbcType=VARCHAR},
      tree_group = #{treeGroup,jdbcType=VARCHAR},
      fund_rcode = #{fundRcode,jdbcType=VARCHAR},
      blacklist_rcode = #{blacklistRcode,jdbcType=VARCHAR},
      external_rcode = #{externalRcode,jdbcType=VARCHAR},
      qianhai_rcode = #{qianhaiRcode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      score = #{score,jdbcType=VARCHAR},
      td_blacklist_detail = #{tdBlacklistDetail,jdbcType=VARCHAR},
      br_blacklist_detail = #{brBlacklistDetail,jdbcType=VARCHAR},
      lw_driver_status = #{lwDriverStatus,jdbcType=VARCHAR},
      qh_credoo_score = #{qhCredooScore,jdbcType=INTEGER},
      xl_data_status_value = #{xlDataStatusValue,jdbcType=VARCHAR},
      ins_rule_a_code = #{insRuleACode,jdbcType=VARCHAR},
      ins_rule_b_code = #{insRuleBCode,jdbcType=VARCHAR},
      risk_grade = #{riskGrade,jdbcType=VARCHAR},
      risk_label = #{riskLabel,jdbcType=VARCHAR},
      workflow_label = #{workflowLabel,jdbcType=VARCHAR},
      gzt_bad_info_detail = #{gztBadInfoDetail,jdbcType=VARCHAR},
      mt_gzt_bad_info_detail = #{mtGztBadInfoDetail,jdbcType=VARCHAR},
      gt_gzt_bad_info_detail = #{gtGztBadInfoDetail,jdbcType=VARCHAR},
      pre_credit = #{preCredit,jdbcType=INTEGER},
      pre_rate = #{preRate,jdbcType=VARCHAR},
      fraud_alert = #{fraudAlert,jdbcType=VARCHAR},
      fraud_score = #{fraudScore,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>